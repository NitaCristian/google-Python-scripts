ranking of errors generated by the system: 
    list of all the error messages logged and how many times each error was found
    sorted by the most common error to the least common error
    
user usage statistics for the service:
    list of all users 
    including how many info messages and how many error messages they've generated. 
    This report is sorted by username

ticky_check.py 
# /var/log/syslog

    import operator
    import re
    import csv
    import os 
    import sys

    # Dictionary to hold errors and their frequency
    error = {}
    # Dictionary to hold users and their info and error messages
    per_user = {}

    with open('syslog.log') as file:
        for row in file:
            # Look for an error message
            result = re.search(r"ticky: ERROR: ([\w ]*).*\((\w+)\)", line)

            # If an error has been found 
            if result is not None:
                # Frequency of the error is increased by 1
                error[result[1]] = error.get(result[1], 0) + 1
                # Get the user
                per_user[result[2]] = error.get(result[1], [0, 0])
                # It's error messages frequency is increased
                per_user[result[2]][1] += 1

            # Look for an info message
            result = re.search(r"ticky: INFO: ([\w ]*).*\((\w+)\)", line)
            if result is not None:
                per_user[result[2]] = error.get(result[1], [0, 0])
                per_user[result[2]][0] += 1

    # Sort the dictionary
    error = sorted(error.items(), key=operator.itemgetter(1), reverse=True)
    with open('error_message.csv', 'w', newline='') as file:
        error.insert(0, ("Error", "Count"))
        writer = csv.writer(file)
        writer.writerows(error)

    per_user = sorted(per_user.items(), key=operator.itemgetter(0))
    with open('user_statistics.csv', 'w', newline='') as file:
        per_user.insert(0, ("Username", "INFO", "ERROR"))
        writer = csv.writer(file)
        writer.writerow(per_user[0])
        # Do this weird thing
        for item in per_user[1:]:
            writer.writerow((item[0], item[1][0], item[1][1]))

    



After you've processed the log entries from the syslog.log file, you need to sort both the per_user and error dictionary before creating CSV report files.
    The user dictionary should be sorted by username.


Insert column names as ("Error", "Count") at the zero index position of the sorted error
And insert column names as ("Username", "INFO", "ERROR") at the zero index position of the sorted per_user dictionary

error_message.csv and user_statistics.csv.